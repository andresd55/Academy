{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport let StorageService = /*#__PURE__*/(() => {\n  class StorageService {\n    constructor(router) {\n      this.router = router;\n    }\n\n    addToken(token) {\n      localStorage.setItem('finitex_t', JSON.stringify(token));\n    }\n\n    getUserLocal() {\n      return JSON.parse(localStorage.getItem('finitex_t'));\n    }\n\n    addUser(user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    }\n\n    getUser() {\n      return JSON.parse(localStorage.getItem('user'));\n    }\n\n    addLanguage(lang) {\n      localStorage.setItem('language', JSON.stringify(lang));\n    }\n\n    getLanguage() {\n      return JSON.parse(localStorage.getItem('language'));\n    }\n\n    addUserType(type) {\n      localStorage.setItem('user_type', JSON.stringify(type));\n    }\n\n    getUserType() {\n      return JSON.parse(localStorage.getItem('user_type'));\n    }\n\n    addGrup(data) {\n      localStorage.setItem('grupos', JSON.stringify(data));\n    }\n\n    getGrup() {\n      return JSON.parse(localStorage.getItem('grupos'));\n    }\n\n    getGrupId() {\n      return JSON.parse(localStorage.getItem('grupos'));\n    }\n\n    addArtwork(data) {\n      localStorage.setItem('artwork', JSON.stringify(data));\n    }\n\n    getArtwork() {\n      return JSON.parse(localStorage.getItem('artwork'));\n    }\n\n    addProfiles(data) {\n      localStorage.setItem('profiles', JSON.stringify(data));\n    }\n\n    getProfiles() {\n      return JSON.parse(localStorage.getItem('profiles'));\n    }\n\n    clearStorage() {\n      localStorage.clear();\n    }\n\n    clearStorageSession() {\n      sessionStorage.clear();\n    }\n\n    logoutUser() {\n      this.clearStorage();\n      this.clearStorageSession(); // this.authService.logout();\n\n      this.router.navigate(['/login']);\n    }\n\n    logoutUserInterceptor() {\n      this.clearStorageSession(); // this.authService.logout();\n\n      this.router.navigate(['/login']);\n    }\n\n    addProductBrand(data) {\n      localStorage.setItem('productBrand', JSON.stringify(data));\n    }\n\n    getProductBrand() {\n      return JSON.parse(localStorage.getItem('productBrand'));\n    }\n\n    addItemToBrandProductShoppingCart(data) {\n      localStorage.setItem('brandProductShoppingCart', JSON.stringify(data));\n    }\n\n    getItemFromBrandProductShoppingCart() {\n      let brandProductShoppingCart = JSON.parse(localStorage.getItem('brandProductShoppingCart'));\n      return brandProductShoppingCart ? brandProductShoppingCart : [];\n    }\n\n    removeBrandProductShoppingCart() {\n      localStorage.removeItem('brandProductShoppingCart');\n    }\n\n    getSelectedSampleItem() {\n      return JSON.parse(localStorage.getItem('SelectedSampleItem'));\n    }\n\n    getSamplesItems() {\n      return JSON.parse(localStorage.getItem('SamplesItems'));\n    }\n\n    removeSamplesItems() {\n      localStorage.removeItem('SamplesItems');\n    }\n\n    addFloorControl(data) {\n      localStorage.setItem('floorControl', JSON.stringify(data));\n    }\n\n    getFloorControl() {\n      return JSON.parse(localStorage.getItem('floorControl'));\n    }\n\n    refreshToken(accessToken, expiresIn, refreshToken) {\n      let currentUserAplication = this.getUser();\n      this.addToken(accessToken);\n      currentUserAplication.access_token = accessToken;\n      currentUserAplication.expires_in = expiresIn;\n      currentUserAplication.refresh_token = refreshToken;\n      this.addUser(currentUserAplication);\n    }\n\n  }\n\n  StorageService.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)(i0.ɵɵinject(i1.Router));\n  };\n\n  StorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return StorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}